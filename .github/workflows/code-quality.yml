name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Code formatting check with Black
      run: |
        black --check --diff --line-length=120 agraph/ examples/

    - name: Import sorting check with isort
      run: |
        isort --check-only --diff --line-length=120 agraph/ examples/

    - name: Linting with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 agraph/ examples/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 120 chars wide
        flake8 agraph/ examples/ --count --exit-zero --max-complexity=10 --max-line-length=120 --extend-ignore=E203,W503,E501 --statistics

    - name: Type checking with mypy
      run: |
        mypy agraph/ --ignore-missing-imports --follow-imports=silent --allow-untyped-defs

    - name: Linting with pylint
      run: |
        pylint agraph/ --exit-zero --rcfile=.pylintrc

    - name: Security check with bandit
      run: |
        bandit -r agraph/ -ll --exit-zero

    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report-${{ matrix.python-version }}
        path: bandit-report.json
